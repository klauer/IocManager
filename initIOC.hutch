PORTBASE=39050
PROCMGRDBIN=procmgrd

# Start up the procmgrd processes.
cfguser=${cfg}ioc
if [ "$cfg" == "xrt" ]; then
    cfguser = feeioc
fi

if [ "$cfg" != "xrt" -a "$cfg" != "las" ]; then
    ctrlport=$(( PORTBASE ))
    logport=$(( ctrlport + 1 ))
    su ${cfguser} -s /bin/sh -c "${PROCMGRDBIN}0 --allow --ignore '^D' -l $logport --coresize 0 -c /tmp $ctrlport /bin/sh -f"
    fixTelnet $ctrlport
fi

ctrlport=$(( PORTBASE + 2 ))
logport=$(( ctrlport + 1 ))
su feeioc -s /bin/sh -c "${PROCMGRDBIN}1 --allow --ignore '^D' -l $logport --coresize 0 -c /tmp $ctrlport /bin/sh -f"
fixTelnet $ctrlport

ctrlport=$(( PORTBASE + 4 ))
logport=$(( ctrlport + 1 ))
su lasioc -s /bin/sh -c "${PROCMGRDBIN}2 --allow --ignore '^D' -l $logport --coresize 0 -c /tmp $ctrlport /bin/sh -f"
fixTelnet $ctrlport

# Driver stuff.

if [ -x /sbin/service ]; then
        /sbin/service hyperthreading-disable start
fi

if [ ! -e /dev/era0 -a -e $IOC_ROOT/../modules/event2/latest/driver/evr_load_module ]; then
        # Load EVR module on startup
        # Must be run as root
        $IOC_ROOT/../modules/event2/latest/driver/evr_load_module
	if [ ! -e /dev/era0 ]
        then
	    /sbin/rmmod evr_device
        fi
	if [ ! -e /dev/ega0 ]
        then
	    /sbin/rmmod pci_mrfevg
        fi
fi

if [ ! -e /dev/edt0 -a -e /opt/EDTpdv/edtinit ]; then
        # Install EDT driver on startup
        # Must be run as root
        /opt/EDTpdv/edtinit start
fi

# Add any extra driver initialization before this comment.

# Setup the IOC user environment.
export IOC=$host
source $IOC_COMMON/All/${cfg}_env.sh

# Start caRepeater.
su ${cfguser} -s /bin/sh -c "$PROCSERV --logfile $IOC_DATA/$IOC_HOST/iocInfo/caRepeater.log --name caRepeater 30000 $CA_BIN/caRepeater"
sleep 5

# Start all of our processes.
if [ "$cfg" != "xrt" -a "$cfg" != "las" ]; then
    startAll $cfg $host
fi
startAll xrt $host
startAll las $host
